// Automatically generated by GRFCODEC. Do not modify!
// (Info version 32)
// Escapes: 2+ 2- 2< 2> 2u< 2u> 2/ 2% 2u/ 2u% 2* 2& 2| 2^ 2sto = 2s 2rst = 2r 2psto 2ror = 2rot 2cmp 2ucmp 2<< 2u>> 2>>
// Escapes: 71 70 7= 7! 7< 7> 7G 7g 7gG 7GG 7gg 7c 7C
// Escapes: D= = DR D+ = DF D- = DC Du* = DM D* = DnF Du<< = DnC D<< = DO D& D| Du/ D/ Du% D%
// Format: spritenum imagefile depth xpos ypos xsize ysize xrel yrel zoom flags

0 * 4 \d18 

1 * 54 14 "C" "INFO" 
"B" "VRSN" \w4 \dx00000000 
"B" "MINV" \w4 \dx00000000 
"B" "NPAR" \w1 00 
"B" "PALS" \w1 "A" 
"B" "BLTR" \w1 "8" 
00 
00 
2 * 165 08 08 "NML\04" "NML Example NewGRF: Industry" 00 "\8ENML Example NewGRF: Industry\0D\98This NewGRF is intended to provide a coding example for the high-level NewGRF-coding language NML." 00 
3 * 110 04 00 FF 01 \wxD000 "\0DVar 69: \90Foo \0D\98Var 6A: \90Foo \0D\98Var 6B: \90Foo \0D\98Var 6C: \90Foo \0D\98Var 6D: \90Foo \0D\98Var 6E: \90Foo \0D\98Var 6F: \90Foo" 00 

4 * 52 00 08 \b1 0B FF \wx0000 
09 "PASS" "COAL" "MAIL" "OIL_" "LVST" 
"GOOD" "GRAI" "WOOD" "IORE" "STEL" 
"VALU" 

// Name: test_produce1
5 * 13 02 0A FF 02 \b2 01 80 08 81 \b1 09 82 83 

// Name: test_produce1@registers
6 * 86 02 0A FF 89 
1A 20 \dx00000005 
\2sto 1A 20 \dx00000000 
\2sto 1A 20 \dx00000080 
\2r 1A 20 \dx00000007 
\2sto 1A 20 \dx00000001 
\2sto 1A 20 \dx00000081 
\2r 1A 20 \dx00000005 
\2sto 1A 20 \dx00000082 
\2r 1A 20 \dx00000001 
\2sto 1A 00 \dx00000083 
\b1 
\wx00FF \dx00000000 \dx00000000 
\wx00FF // 

7 * 64 00 0A \b6 01 FF \wx0000 
08 06 
09 06 
25 \b4 
02 05 09 0A 
26 \b4 
01 03 08 06 
27 \b4 
00 00 00 00 
28 \b4 \b4 
\wx0100 \wx0100 \wx0100 \wx0100 
\wx0000 \wx0000 \wx0000 \wx0000 
\wx0000 \wx0000 \wx0400 \wx0000 
\wx0080 \wx0000 \wx0000 \wx0080 

8 * 11 00 0A \b2 01 FF \wx0000 
21 02 
22 01 

// Name: @CB_FAILED_PROD
9 * 15 02 0A FE 00 \wx0000 \wx0000 \wx0000 \wx0000 \wx0000 00 

// Name: @CB_FAILED0A
10 * 23 02 0A FE 89 
0C 00 \dx0000FFFF 
\b1 
\wx8000 \dx00000000 \dx00000000 	// graphics callback -> return 0
\wx00FE // Non-graphics callback, return graphics result

// Name: @action3_0
11 * 23 02 0A FF 89 
18 00 \dx000000FF 
\b1 
\wx00FF \dx00000000 \dx00000000 	// test_produce1;
\wx00FE // @CB_FAILED0A;

// Name: @action3_1
12 * 33 02 0A FE 89 
0C 00 \dx0000FFFF 
\b2 
\wx00FF \dx00000000 \dx00000000 	// @action3_0;
\wx8000 \dx0000003A \dx0000003A 	// return string(STR_INDUSTRY_EXTRA_TEXT);
\wx00FE // @CB_FAILED0A;

13 * 7 03 0A 01 00 \b0 
\wx00FE 	// @action3_1;

14 * 13 00 09 \b3 01 FF \wx0000 
08 27 
09 27 
12 02 

15 * 13 00 09 \b3 01 FF \wx0001 
08 28 
09 28 
12 02 

16 * 13 00 09 \b3 01 FF \wx0002 
08 29 
09 29 
12 02 

17 * 13 00 09 \b3 01 FF \wx0003 
08 2A 
09 2A 
12 02 

18 * 26 00 0A \b6 01 FF \wx0001 
08 09 
09 09 
25 \b3 
04 06 07 
26 \b0 
27 \b3 
08 0C 04 
28 \b0 \b0 
